<?php

namespace ContainerWzxoV4v;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAlgorithmManagerFactoryService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Jose\Component\Core\AlgorithmManagerFactory' shared autowired service.
     *
     * @return \Jose\Component\Core\AlgorithmManagerFactory
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/web-token/jwt-core/AlgorithmManagerFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/web-token/jwt-core/Algorithm.php';
        include_once \dirname(__DIR__, 4).'/vendor/web-token/jwt-signature/Algorithm/SignatureAlgorithm.php';
        include_once \dirname(__DIR__, 4).'/vendor/web-token/jwt-signature-algorithm-rsa/RSAPKCS1.php';
        include_once \dirname(__DIR__, 4).'/vendor/web-token/jwt-signature-algorithm-rsa/RS256.php';
        include_once \dirname(__DIR__, 4).'/vendor/web-token/jwt-signature-algorithm-rsa/RS384.php';
        include_once \dirname(__DIR__, 4).'/vendor/web-token/jwt-signature-algorithm-rsa/RS512.php';
        include_once \dirname(__DIR__, 4).'/vendor/web-token/jwt-signature-algorithm-rsa/RSAPSS.php';
        include_once \dirname(__DIR__, 4).'/vendor/web-token/jwt-signature-algorithm-rsa/PS256.php';
        include_once \dirname(__DIR__, 4).'/vendor/web-token/jwt-signature-algorithm-rsa/PS384.php';
        include_once \dirname(__DIR__, 4).'/vendor/web-token/jwt-signature-algorithm-rsa/PS512.php';

        $container->services['Jose\\Component\\Core\\AlgorithmManagerFactory'] = $instance = new \Jose\Component\Core\AlgorithmManagerFactory();

        $instance->add('RS256', new \Jose\Component\Signature\Algorithm\RS256());
        $instance->add('RS384', new \Jose\Component\Signature\Algorithm\RS384());
        $instance->add('RS512', new \Jose\Component\Signature\Algorithm\RS512());
        $instance->add('PS256', new \Jose\Component\Signature\Algorithm\PS256());
        $instance->add('PS384', new \Jose\Component\Signature\Algorithm\PS384());
        $instance->add('PS512', new \Jose\Component\Signature\Algorithm\PS512());

        return $instance;
    }
}
